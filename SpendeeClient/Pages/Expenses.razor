@page "/expenses"
@using SpendeeClient.Interfaces;
@using SpendeeClient.Models;

@inject IExpenseService ExpenseService
@inject UserState UserState

<h3>Expenses for @UserState.CurrentUser.Name with ID: @UserState.CurrentUser.Id</h3>



<EditForm Model="@newExpense" OnValidSubmit="@CreateExpense">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" class="form-control" @bind-Value="newExpense.Description" />
    </div>
    <div class="form-group">
        <label for="amount">Amount</label>
        <InputNumber id="amount" class="form-control" @bind-Value="newExpense.Amount" />
    </div>
    <div class="form-group">
        <label for="amount">Category</label>
        <InputNumber id="amount" class="form-control" @bind-Value="newExpense.Category" />
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" class="form-control" @bind-Value="newExpense.Date" />
    </div>

    <button class="custom-button" type="submit">Create new Expense</button>
</EditForm>

@code {
    private Expense newExpense = new Expense();


    private async Task CreateExpense()
    {
        newExpense.UserId = UserState.CurrentUser.Id;

        var result = await ExpenseService.AddExpense(newExpense);
    }
}
