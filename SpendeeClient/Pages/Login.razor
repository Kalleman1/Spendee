<!-- Pages/Login.razor -->
@page "/login"

@using SpendeeClient.Interfaces;
@using SpendeeClient.Models;

@inject IAuthService AuthService

<div class="login-container">
    <img src="images/SpendeeLogo.png" alt="Spendee Logo" class="logo-style" />
    
    <div class="form-container">
        <h3>Log in to your account</h3>
        <EditForm Model="@user" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="input-container">
                <InputText id="email" @bind-Value="user.Email" placeholder="Email" />
            </div>
            <div class="input-container">
                <InputText id="password" @bind-Value="user.Password" type="password" placeholder="Password" />
            </div>
            
            <div class="input-container">
            <button class="custom-button" type="submit">Login</button>
            </div>

            <div class="input-container">
                <p>Dont have an account yet?</p>
                <a onclick="@NavigateToRegister">Register!</a>
            </div>
        </EditForm>
    </div>
</div>


@code {
    private User user = new User();

    private async Task HandleLogin()
    {
        var loggedInUser = await AuthService.Login(user);
        // Handle post-login actions, e.g., navigate to another page
        if (loggedInUser != null)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            // Show an error message
        }
    }

    private async Task NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; }
}